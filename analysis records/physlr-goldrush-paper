# env
conda_env physlrpy3.7

# dir
cd /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/

# datasets
cd datasets
mkdir hg02055 hg01243 hg002 chm13
ln -s /projects/btl/datasets/hprc/HG02055/nanopore/HG02055.fq.gz hg02055/
ln -s /projects/btl/datasets/hprc/HG01243/nanopore/HG01243.fq.gz hg01243/
ln -s /projects/btl/datasets/hsapiens/giab/AshkenazimTrio/HG002_NA24385_son/nanopore/gm_2023.01_kit14_dorado/hg002.pass.cram.fq hg002/HG002.fq
ln -s /projects/btl/datasets/hsapiens/CHM13_ONT_T2T-rel8-guppy5.0.7/reads.63X.fq.gz chm13/CHM13.fq.gz

which abyss-fac
# result: /projects/btl/lcoombe/linuxbrew/bin/abyss-fac

cd hg02055/
nohup abyss-fac -t0 HG02055.fq.gz &> HG02055.fq.gz.abyssfac.tsv &
cd ../hg01243
nohup abyss-fac -t0 HG01243.fq.gz &> HG01243.fq.gz.abyssfac.tsv &
cd ../hg002 
nohup abyss-fac -t0 HG002.fq &> HG002.fq.abyssfac.tsv &
cd ../chm13
nohup abyss-fac -t0 CHM13.fq.gz &> CHM13.fq.gz.abyssfac.tsv &
cd ../hg02055/
nohup abyss-fac HG02055.fq.gz &> HG02055.fq.gz.abyssfac500.tsv &
cd ../hg01243
nohup abyss-fac HG01243.fq.gz &> HG01243.fq.gz.abyssfac500.tsv &
cd ../hg002 
nohup abyss-fac HG002.fq &> HG002.fq.abyssfac500.tsv &
cd ../chm13
nohup abyss-fac CHM13.fq.gz &> CHM13.fq.gz.abyssfac500.tsv &


# run Physlr to generate HPC and RLE read datasets
git clone git@github.com:bcgsc/physlr.git physlr_to_run_hpc_and_rle
cd physlr_to_run_hpc_and_rle
git checkout goldrush

cd hg02055/
nohup pypy3 ../physlr_to_run_hpc_and_rle/physlr/hpc.py -i HG02055.fq.gz -o HG02055.rle.fq -b 10000 &
pigz HG02055.rle.fq
../physlr_to_run_hpc_and_rle/bin/physlr-make HG02055.hpc.fq.gz lr=HG02055 &

cd ../hg01243
nohup pypy3 ../physlr_to_run_hpc_and_rle/physlr/hpc.py -i HG01243.fq.gz -o HG01243.rle.fq -b 10000 &
pigz HG01243.rle.fq
../physlr_to_run_hpc_and_rle/bin/physlr-make HG01243.hpc.fq.gz lr=HG01243 &

cd ../hg002
nohup pypy3 ../physlr_to_run_hpc_and_rle/physlr/hpc.py -i HG002.fq -o HG002.rle.fq -b 10000 &
pigz HG002.rle.fq
../physlr_to_run_hpc_and_rle/bin/physlr-make HG002.hpc.fq.gz lr=HG002 &

cd ../chm13
nohup pypy3 ../physlr_to_run_hpc_and_rle/physlr/hpc.py -i CHM13.fq.gz -o CHM13.rle.fq -b 10000 &
pigz CHM13.rle.fq
../physlr_to_run_hpc_and_rle/bin/physlr-make CHM13.hpc.fq.gz lr=CHM13 &



# Print abyss-fac results
sed 's/\s\+/|/g' hg02055/HG02055.fq.gz.abyssfac.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'
sed 's/\s\+/|/g' hg01243/HG01243.fq.gz.abyssfac.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'
sed 's/\s\+/|/g' hg002/HG002.fq.abyssfac.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'
sed 's/\s\+/|/g' chm13/CHM13.fq.gz.abyssfac.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'

sed 's/\s\+/|/g' hg02055/HG02055.fq.gz.abyssfac500.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'
sed 's/\s\+/|/g' hg01243/HG01243.fq.gz.abyssfac500.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'
sed 's/\s\+/|/g' hg002/HG002.fq.abyssfac500.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'
sed 's/\s\+/|/g' chm13/CHM13.fq.gz.abyssfac500.tsv | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta'

cd ../
mkdir refs
cd refs/
ln -s /projects/btl/reference_genomes/H_sapiens/GRCh38/GCA_000001405.15_GRCh38_genomic.chr-only.fa grch38.fa
ln -s /projects/btl/datasets/hsapiens/CHM13_T2T_assemblies/v2.0/chm13v2.0_noY.fa

awk ' NR%2 == 0 {sum+=length} END {print sum}' grch38.fa
awk '!/^>/ { sum += length($0) } END { print sum }' chm13v2.0_noY.fa

cd ../

git clone git@github.com:bcgsc/physlr.git physlr-src-code-goldrush
cd physlr-src-code-goldrush/src/
make install # it probably wont work in this conda env. need to fix it later. For now I copied the src codes from another directory.

cd ../data

ln -s /projects/btl/reference_genomes/H_sapiens/GRCh38/GCA_000001405.15_GRCh38_genomic.chr-only.fa grch38.fa
ln -s /projects/btl/datasets/hsapiens/CHM13_T2T_assemblies/v2.0/chm13v2.0_noY.fa

ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg02055/HG02055.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg02055/HG02055.hpc.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg02055/HG02055.rle.fq.gz

ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg01243/HG01243.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg01243/HG01243.hpc.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg01243/HG01243.rle.fq.gz

ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg002/HG002.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg002/HG002.hpc.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/hg002/HG002.rle.fq.gz

ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/chm13/CHM13.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/chm13/CHM13.hpc.fq.gz
ln -s /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/datasets/chm13/CHM13.rle.fq.gz

cd ../../

mkdir hg01243/physlr/

cp -a physlr-src-code-goldrush/ hg01243/physlr/default
cp -a physlr-src-code-goldrush/ hg01243/physlr/m95
cp -a physlr-src-code-goldrush/ hg01243/physlr/m90
cp -a physlr-src-code-goldrush/ hg01243/physlr/m85

cp -a hg01243/physlr/ hg01243/physlr_hpc
cp -a hg01243/physlr/ hg01243/physlr_rle

# Make sure physlr conda env is active, and then run Physlr filter-reads
cd hg01243/physlr/default/data
git pull
../bin/physlr-make filter-reads lr=HG01243 protocol=long t=48 > log_HG01243.log 2>&1

cd hg01243/physlr/m95/data
git pull
../bin/physlr-make filter-reads lr=HG01243 protocol=long t=48 m=95 > log_HG01243_m95.log 2>&1

cd hg01243/physlr_rle/default/data
git pull
../bin/physlr-make filter-reads lr=HG01243.rle lr2=HG01243 protocol=long t=48 > log_HG01243_rle.log 2>&1

cd hg01243/physlr_rle/m95/data
git pull
../bin/physlr-make filter-reads lr=HG01243.rle lr2=HG01243 protocol=long t=48 m=95 > log_HG01243_m95.log 2>&1






## Read analysis
dataset=HG01243
awk 'NR%4 == 2 {print length}' ${dataset}.d1.fq > ${dataset}.d1.fq.read_length
awk 'NR%4 == 2 {print length}' ${dataset}.d2.fq > ${dataset}.d2.fq.read_length
awk 'NR%4 == 2 {print length}' ${dataset}.d4.fq > ${dataset}.d4.fq.read_length

# then used python to plot
JN_repo






















##### QUAST THE RESULTS for hg002



cd /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/hg002/physlr-goldrush/rle/default/d1/d1+d3/

ln -s /projects/btl/reference_genomes/H_sapiens/GRCh38/GCA_000001405.15_GRCh38_genomic.chr-only.fa grch38.fa
ref=grch38.fa
ln -s w16_x10_golden_path.goldpolish-polished.span2.dist500.tigmint.fa.k40.w250.ntLink-5rounds.fa goldrush.fa
fasta=goldrush.fa

quast-lg -t48 -es --fast --large --scaffold-gap-max-size 100000 --min-identity 80 --split-scaffolds -R ${ref} -o quast_${fasta}_${ref}_quast ${fasta}
minimap2 --version > quast_${fasta}_${ref}_quast/minimap2.version
quast --version > quast_${fasta}_${ref}_quast/quast.version
cat quast_${fasta}_${ref}_quast/transposed_report.tsv |  mlr --tsv cut -o -f Assembly,NG50,NGA50,"# misassemblies","# local misassemblies","Genome fraction (%)","Duplication ratio","Total length","Unaligned length","# unaligned contigs","# N's per 100 kbp","# mismatches per 100 kbp","# indels per 100 kbp"| sed 's/\t/|/g' | sed 's/^/|/g' | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta' > quast_${fasta}_${ref}_quast.tsv
cat quast_${fasta}_${ref}_quast.tsv


cd /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/hg002/physlr-goldrush/rle/default/d2/d2+d4/

ln -s /projects/btl/reference_genomes/H_sapiens/GRCh38/GCA_000001405.15_GRCh38_genomic.chr-only.fa grch38.fa
ref=grch38.fa
ln -s w16_x10_golden_path.goldpolish-polished.span2.dist500.tigmint.fa.k40.w250.ntLink-5rounds.fa goldrush.fa
fasta=goldrush.fa

quast-lg -t48 -es --fast --large --scaffold-gap-max-size 100000 --min-identity 80 --split-scaffolds -R ${ref} -o quast_${fasta}_${ref}_quast ${fasta}
minimap2 --version > quast_${fasta}_${ref}_quast/minimap2.version
quast --version > quast_${fasta}_${ref}_quast/quast.version
cat quast_${fasta}_${ref}_quast/transposed_report.tsv |  mlr --tsv cut -o -f Assembly,NG50,NGA50,"# misassemblies","# local misassemblies","Genome fraction (%)","Duplication ratio","Total length","Unaligned length","# unaligned contigs","# N's per 100 kbp","# mismatches per 100 kbp","# indels per 100 kbp"| sed 's/\t/|/g' | sed 's/^/|/g' | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta' > quast_${fasta}_${ref}_quast.tsv
cat quast_${fasta}_${ref}_quast.tsv




cd /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/hg002/physlr-goldrush/rle/m95/d1/d1+d3/

ln -s /projects/btl/reference_genomes/H_sapiens/GRCh38/GCA_000001405.15_GRCh38_genomic.chr-only.fa grch38.fa
ref=grch38.fa
ln -s w16_x10_golden_path.goldpolish-polished.span2.dist500.tigmint.fa.k40.w250.ntLink-5rounds.fa goldrush.fa
fasta=goldrush.fa

quast-lg -t48 -es --fast --large --scaffold-gap-max-size 100000 --min-identity 80 --split-scaffolds -R ${ref} -o quast_${fasta}_${ref}_quast ${fasta}
minimap2 --version > quast_${fasta}_${ref}_quast/minimap2.version
quast --version > quast_${fasta}_${ref}_quast/quast.version
cat quast_${fasta}_${ref}_quast/transposed_report.tsv |  mlr --tsv cut -o -f Assembly,NG50,NGA50,"# misassemblies","# local misassemblies","Genome fraction (%)","Duplication ratio","Total length","Unaligned length","# unaligned contigs","# N's per 100 kbp","# mismatches per 100 kbp","# indels per 100 kbp"| sed 's/\t/|/g' | sed 's/^/|/g' | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta' > quast_${fasta}_${ref}_quast.tsv
cat quast_${fasta}_${ref}_quast.tsv


cd /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/paper_experiments/hg002/physlr-goldrush/rle/m95/d2/d2+d4/

ln -s /projects/btl/reference_genomes/H_sapiens/GRCh38/GCA_000001405.15_GRCh38_genomic.chr-only.fa grch38.fa
ref=grch38.fa
ln -s w16_x10_golden_path.goldpolish-polished.span2.dist500.tigmint.fa.k40.w250.ntLink-5rounds.fa goldrush.fa
fasta=goldrush.fa

quast-lg -t48 -es --fast --large --scaffold-gap-max-size 100000 --min-identity 80 --split-scaffolds -R ${ref} -o quast_${fasta}_${ref}_quast ${fasta}
minimap2 --version > quast_${fasta}_${ref}_quast/minimap2.version
quast --version > quast_${fasta}_${ref}_quast/quast.version
cat quast_${fasta}_${ref}_quast/transposed_report.tsv |  mlr --tsv cut -o -f Assembly,NG50,NGA50,"# misassemblies","# local misassemblies","Genome fraction (%)","Duplication ratio","Total length","Unaligned length","# unaligned contigs","# N's per 100 kbp","# mismatches per 100 kbp","# indels per 100 kbp"| sed 's/\t/|/g' | sed 's/^/|/g' | sed -E ':a;s/([0-9]+)([0-9]{3}\>)/\1,\2/g;ta' > quast_${fasta}_${ref}_quast.tsv
cat quast_${fasta}_${ref}_quast.tsv





# checking minimizers counts and plotting against length of reads
# see what physlr command to run
../bin/physlr-make reads.63X.20k.rle.k40-w32.n100-1000.physlr.tsv.gz lr=HG02055.rle lr2=HG02055 protocol=long t=35 m=85 -n
# physlr command run manually
pigz -p35 -cd reads.63X.20k.rle.k40-w32.physlr.tsv.gz | command time -v -o reads.63X.20k.rle.k40-w32.n100-100000.physlr.tsv.gz.time /projects/btl_scratch/aafshinfard/projects/physlr-goldrush/p
aper_experiments/chm13/physlr_20k_rle/physlr_rle_default/src/physlr-filter-barcodes -n100 -N100000 - | pigz -p35 >reads.63X.20k.rle.k40-w32.n100-100000.physlr.tsv.gz

# now convert to mx count per read
pigz -dc reads.63X.20k.rle.k40-w32.n100-50000.physlr.tsv.gz | awk '{print $1 "\t" (NF-1)}' | pigz > reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz

# now get names of this reads
pigz -dc reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz |  awk '{print $1}' > reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames.tsv

# now use names to filter the whole read set and then pipe into finding the read len for these reads
seqtk subseq reads.63X.20k.fq reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames.tsv | awk 'NR%4==1 {read_name=$1} NR%4==2 {printf "%s\t%s\n", read_name, length($0)}' > reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames.read_len.tsv

# drop @ from read names in the file from reads and then sort the file based on column 1
sed 's/^@//' reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames.read_len.tsv > reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames_no-at.read_len.tsv
sort -k1,1 reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames_no-at.read_len.tsv > reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames_no-at.read_len.sorted.tsv
# sort the len file too
sort -k1,1 reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv > reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.sorted.tsv
# now merge the two files to have read len and number of mxs for each read to be able to plot..
paste reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.sorted.tsv reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.tsv.gz.readnames_no-at.read_len.sorted.tsv > reads.63X.20k.rle.k40-w32.n100-50000.physlr.mxs-count.paste.len.sorted.tsv
# add to this line whether this read will be filter in the current pipeline

